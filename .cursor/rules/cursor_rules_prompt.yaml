prompt:
  title: "Cursor Rules for Repository Maintenance"
  description: "Define a set of cursor rules to ensure consistent code quality, formatting, and best practices across the repository."
  rules:
    - rule: "Consistent Import Ordering"
      description: "Ensure all imports are ordered alphabetically within their respective groups (standard library, third-party, local)."
      enforcement: "Automatically reorder imports on save or commit."
    - rule: "Code Formatting"
      description: "Adhere to a consistent code style using tools like Black or Prettier."
      enforcement: "Run formatter on save and before commit. Reject commits that don't meet formatting standards."
    - rule: "Linting Checks"
      description: "Run static code analysis to catch potential bugs and enforce coding standards."
      enforcement: "Execute linter on save and as a pre-commit hook. Block commits if linting errors are present."
    - rule: "Type Checking"
      description: "Ensure type safety in the codebase using tools like mypy or TypeScript."
      enforcement: "Run type checker on save and before commit. Prevent commits with type errors."
    - rule: "Commit Message Format"
      description: "Follow conventional commits format for all commit messages to maintain a clear project history."
      enforcement: "Validate commit messages against conventional commits format using a pre-commit hook."
    - rule: "Dependency Management"
      description: "Keep dependencies up-to-date and ensure no conflicting versions are used."
      enforcement: "Automatically check for dependency updates weekly and notify maintainers. Use bun for dependency installation."
    - rule: "Documentation Standards"
      description: "Ensure all public modules, functions, and classes are documented."
      enforcement: "Warn on save if documentation is missing for public entities. Block commits if critical documentation is absent."
    - rule: "Test Coverage"
      description: "Maintain a minimum test coverage threshold to ensure code reliability."
      enforcement: "Run tests on save and before commit. Block commits if coverage falls below 80%."
  goal: "These rules aim to automate and enforce best practices, reduce technical debt, and improve collaboration by maintaining a consistent and high-quality codebase."
